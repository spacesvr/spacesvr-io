/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";

type GLTFResult = GLTF & {
  nodes: {
    twitterlogo: THREE.Mesh;
    twitterbutton: THREE.Mesh;
    twitterbase: THREE.Mesh;
  };
  materials: {
    ["twitter.logo"]: THREE.MeshStandardMaterial;
    ["twitter.button"]: THREE.MeshStandardMaterial;
    ["twitter.base"]: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/Twitter-1607256082/twitter.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    FILE_URL,
    "https://www.gstatic.com/draco/versioned/decoders/1.4.0/"
  ) as GLTFResult;
  return (
    <group ref={group} {...props}>
      <group>
        <mesh
          material={materials["twitter.logo"]}
          geometry={nodes.twitterlogo.geometry}
          name="twitterlogo"
          rotation={[-Math.PI, 0, -Math.PI]}
        />
        <mesh
          material={materials["twitter.button"]}
          geometry={nodes.twitterbutton.geometry}
          name="twitterbutton"
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
        />
        <mesh
          material={materials["twitter.base"]}
          geometry={nodes.twitterbase.geometry}
          name="twitterbase"
          rotation={[Math.PI / 2, 0, Math.PI / 2]}
        />
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);

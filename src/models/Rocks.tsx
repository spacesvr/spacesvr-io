/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { convertToBasic } from "../utils/material";

type GLTFResult = GLTF & {
  nodes: {
    ROCK: THREE.Mesh;
  };
  materials: {
    ["ROCK.MAT"]: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/Rocks3-1607223507/ROCKS_003.export.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    FILE_URL,
    "https://www.gstatic.com/draco/versioned/decoders/1.4.0/"
  ) as GLTFResult;

  // const materials = convertToBasic(oldMaterials)

  return (
    <group ref={group} {...props}>
      <group scale={[120, 120, 120]}>
        <mesh
          material={materials["ROCK.MAT"]}
          geometry={nodes.ROCK.geometry}
          name="ROCK"
          position={[0.0071, 0.0433, 0.1211]}
        />
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);

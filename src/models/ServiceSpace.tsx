/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { convertToBasic } from "../utils/material";

type GLTFResult = GLTF & {
  nodes: {
    SERVICE: THREE.Mesh;
  };
  materials: {
    ["SERVICE.MAT"]: THREE.MeshStandardMaterial;
  };
};

const GLTF_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/SpacesVR8_2-1606605482/spacesvr_08.2.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials: oldMaterials } = useGLTF(GLTF_URL) as GLTFResult;

  const materials = convertToBasic(oldMaterials);

  return (
    <group ref={group} {...props}>
      <group>
        <mesh
          material={materials["SERVICE.MAT"]}
          geometry={nodes.SERVICE.geometry}
          name="SERVICE"
          position={[-1.2738, 4.6535, 0.1451]}
          rotation={[0, 0, 0]}
        />
      </group>
    </group>
  );
}

useGLTF.preload(GLTF_URL);

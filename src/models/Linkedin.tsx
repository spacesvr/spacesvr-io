/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei/useGLTF";

import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";

type GLTFResult = GLTF & {
  nodes: {
    linkedinlogo: THREE.Mesh;
    linkedinbutton: THREE.Mesh;
    linkedinbase: THREE.Mesh;
  };
  materials: {
    ["linkedin.lol"]: THREE.MeshStandardMaterial;
    ["linkedin.button"]: THREE.MeshStandardMaterial;
    ["linkedin.base"]: THREE.MeshStandardMaterial;
  };
};

const FILE_URL =
  "https://d27rt3a60hh1lx.cloudfront.net/models/LinkedIn-1607257870/linkedin.glb";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF(
    FILE_URL,
    "https://www.gstatic.com/draco/versioned/decoders/1.4.0/"
  ) as GLTFResult;
  return (
    <group ref={group} {...props}>
      <group>
        <mesh
          material={materials["linkedin.lol"]}
          geometry={nodes.linkedinlogo.geometry}
          name="linkedinlogo"
        />
        <mesh
          material={materials["linkedin.button"]}
          geometry={nodes.linkedinbutton.geometry}
          name="linkedinbutton"
        />
        <mesh
          material={materials["linkedin.base"]}
          geometry={nodes.linkedinbase.geometry}
          name="linkedinbase"
        />
      </group>
    </group>
  );
}

useGLTF.preload(FILE_URL);
